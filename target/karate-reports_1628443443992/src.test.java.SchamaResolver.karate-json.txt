{"failedCount":1,"prefixedPath":"src\/test\/java\/SchamaResolver.feature","packageQualifiedName":"src.test.java.SchamaResolver","loopIndex":-1,"relativePath":"src\/test\/java\/SchamaResolver.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":6592577,"millis":6.592577,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"url baseUrl + '\/graphql'"}},{"result":{"nanos":12044850,"errorMessage":"js failed:\n>>>>\n01: read('\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/contact\/schemaTest.json')\n<<<<\norg.graalvm.polyglot.PolyglotException: java.io.FileNotFoundException: \/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/contact\/schemaTest.json (No such file or directory)\n- com.intuit.karate.resource.FileResource.getStream(FileResource.java:98)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:99)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:95)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:53)\n- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:124)\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/SchamaResolver.feature:5","millis":12.04485,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"def sampleSchema = read('\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/contact\/schemaTest.json')"},"stepLog":"22:53:18.712 src\/test\/java\/SchamaResolver.feature:5\n* def sampleSchema = read('\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/contact\/schemaTest.json')\njs failed:\n>>>>\n01: read('\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/contact\/schemaTest.json')\n<<<<\norg.graalvm.polyglot.PolyglotException: java.io.FileNotFoundException: \/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/contact\/schemaTest.json (No such file or directory)\n- com.intuit.karate.resource.FileResource.getStream(FileResource.java:98)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:99)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:95)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:53)\n- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:124)\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/SchamaResolver.feature:5\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":8,"prefix":"Given","index":0,"text":"def query = read('\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/queries\/searchByName.graphql')"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":9,"prefix":"And","index":1,"text":"def variables = {id: 'C105'}"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":10,"prefix":"And","index":2,"text":"request { query: '#(query)', variables: '#(variables)' }"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":11,"prefix":"When","index":3,"text":"method POST"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":12,"prefix":"Then","index":4,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":13,"prefix":"And","index":5,"text":"match response == sampleSchema"}}],"line":7,"description":"","durationMillis":18.637427,"failed":true,"error":"js failed:\n>>>>\n01: read('\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/contact\/schemaTest.json')\n<<<<\norg.graalvm.polyglot.PolyglotException: java.io.FileNotFoundException: \/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/Users\/pranesh.gaikwad\/Documents\/GitHub\/KarateGraphQL\/src\/test\/java\/contact\/schemaTest.json (No such file or directory)\n- com.intuit.karate.resource.FileResource.getStream(FileResource.java:98)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsStream(ScenarioFileReader.java:99)\n- com.intuit.karate.core.ScenarioFileReader.readFileAsString(ScenarioFileReader.java:95)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:53)\n- com.intuit.karate.core.ScenarioEngine.lambda$new$0(ScenarioEngine.java:124)\n- <js>.:program(Unnamed:1)\n\nsrc\/test\/java\/SchamaResolver.feature:5","executorName":"main","name":"Test for valid GraphQL Schema and Resolver","startTime":1628443398563,"refId":"[1:7]","endTime":1628443398712,"exampleIndex":-1}],"callDepth":0,"name":"Test GraphQL Schema and Resolver using external file","description":"","resultDate":"2021-08-08 10:53:18 pm","durationMillis":18.637427,"passedCount":0}